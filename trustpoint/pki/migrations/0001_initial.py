# Generated by Django 5.1.9 on 2025-06-18 07:48

import django.db.models.deletion
import pki.models.extension
import trustpoint.logger
import util.db
import util.field
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessDescriptionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_method', models.CharField(editable=False, max_length=256, verbose_name='Access Method OID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorityKeyIdentifierExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_identifier', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Key Identifier')),
                ('authority_cert_serial_number', models.CharField(blank=True, editable=False, max_length=256, null=True, verbose_name='Authority Cert Serial Number')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
            ],
            options={
                'abstract': False,
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='CertificatePoliciesExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='CPSUriModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cps_uri', models.CharField(editable=False, max_length=2048, verbose_name='CPS URI')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CrlDistributionPointsExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='DistributionPointModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reasons', models.CharField(blank=True, max_length=16, null=True, verbose_name='Reasons')),
            ],
            options={
                'abstract': False,
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='ExtendedKeyUsageExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameDNSName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(editable=False, max_length=1024, unique=True, verbose_name='Value')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameRegisteredId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(editable=False, max_length=256, verbose_name='Value')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameRFC822Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(editable=False, max_length=1024, unique=True, verbose_name='Value')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameUniformResourceIdentifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(editable=False, max_length=16384, unique=True, verbose_name='Value')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InhibitAnyPolicyExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('inhibit_any_policy', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='InhibitAnyPolicy')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='KeyPurposeIdModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.CharField(editable=False, max_length=256, unique=True, verbose_name='Key Purpose OID')),
            ],
        ),
        migrations.CreateModel(
            name='NoticeReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, editable=False, max_length=200, null=True, verbose_name='Organization')),
                ('notice_numbers', models.CharField(blank=True, editable=False, max_length=1024, null=True, verbose_name='Notice Numbers')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PolicyConstraintsExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('require_explicit_policy', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='requireExplicitPolicy')),
                ('inhibit_policy_mapping', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='inhibitPolicyMapping')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='PolicyInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_identifier', models.CharField(editable=False, max_length=256, verbose_name='Policy Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyQualifierInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_qualifier_id', models.CharField(editable=False, max_length=256, verbose_name='Policy Qualifier ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectKeyIdentifierExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_identifier', models.CharField(editable=False, max_length=256, unique=True, verbose_name='Key Identifier')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='TruststoreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_name', models.CharField(max_length=100, unique=True, validators=[util.field.UniqueNameValidator()], verbose_name='Unique Name')),
                ('intended_usage', models.IntegerField(choices=[(0, 'IDevID'), (1, 'TLS'), (2, 'Generic')], verbose_name='Intended Usage')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created-At')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeTypeAndValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.CharField(editable=False, max_length=256, verbose_name='OID')),
                ('value', models.CharField(editable=False, max_length=16384, verbose_name='Value')),
            ],
            options={
                'unique_together': {('oid', 'value')},
            },
        ),
        migrations.CreateModel(
            name='AuthorityInformationAccessExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('authority_info_access_syntax', models.ManyToManyField(blank=True, related_name='authority_info_access_syntax', to='pki.accessdescriptionmodel')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='BasicConstraintsExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('ca', models.BooleanField(editable=False, verbose_name='CA')),
                ('path_length_constraint', models.PositiveSmallIntegerField(blank=True, editable=False, null=True, verbose_name='Path Length Constraint')),
            ],
            options={
                'unique_together': {('critical', 'ca', 'path_length_constraint')},
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.CreateModel(
            name='CertificateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_self_signed', models.BooleanField(verbose_name='Self-Signed')),
                ('common_name', models.CharField(default='', max_length=256, verbose_name='Common Name')),
                ('sha256_fingerprint', models.CharField(editable=False, max_length=256, unique=True, verbose_name='Fingerprint (SHA256)')),
                ('signature_algorithm_oid', models.CharField(choices=[('1.2.840.113549.1.1.4', 'Rsa Md5'), ('1.2.840.113549.1.1.5', 'Rsa Sha1'), ('1.3.14.3.2.29', 'Rsa Sha1 Alt'), ('1.2.840.113549.1.1.14', 'Rsa Sha224'), ('1.2.840.113549.1.1.11', 'Rsa Sha256'), ('1.2.840.113549.1.1.12', 'Rsa Sha384'), ('1.2.840.113549.1.1.13', 'Rsa Sha512'), ('2.16.840.1.101.3.4.3.13', 'Rsa Sha3 224'), ('2.16.840.1.101.3.4.3.14', 'Rsa Sha3 256'), ('2.16.840.1.101.3.4.3.15', 'Rsa Sha3 384'), ('2.16.840.1.101.3.4.3.16', 'Rsa Sha3 512'), ('1.2.840.10045.4.1', 'Ecdsa Sha1'), ('1.2.840.10045.4.3.1', 'Ecdsa Sha224'), ('1.2.840.10045.4.3.2', 'Ecdsa Sha256'), ('1.2.840.10045.4.3.3', 'Ecdsa Sha384'), ('1.2.840.10045.4.3.4', 'Ecdsa Sha512'), ('2.16.840.1.101.3.4.3.9', 'Ecdsa Sha3 224'), ('2.16.840.1.101.3.4.3.10', 'Ecdsa Sha3 256'), ('2.16.840.1.101.3.4.3.11', 'Ecdsa Sha3 384'), ('2.16.840.1.101.3.4.3.12', 'Ecdsa Sha3 512'), ('1.2.840.113533.7.66.13', 'Password Based Mac')], editable=False, max_length=256, verbose_name='Signature Algorithm OID')),
                ('signature_value', models.CharField(editable=False, max_length=65536, verbose_name='Signature Value')),
                ('version', models.PositiveSmallIntegerField(choices=[(2, 'Version 3')], editable=False, verbose_name='Version')),
                ('serial_number', models.CharField(editable=False, max_length=256, verbose_name='Serial Number')),
                ('issuer_public_bytes', models.CharField(editable=False, max_length=2048, verbose_name='Issuer Public Bytes')),
                ('not_valid_before', models.DateTimeField(editable=False, verbose_name='Not Valid Before (UTC)')),
                ('not_valid_after', models.DateTimeField(editable=False, verbose_name='Not Valid After (UTC)')),
                ('subject_public_bytes', models.CharField(editable=False, max_length=2048, verbose_name='Subject Public Bytes')),
                ('spki_algorithm_oid', models.CharField(choices=[('1.2.840.10045.2.1', 'Ecc'), ('1.2.840.113549.1.1.1', 'Rsa')], editable=False, max_length=256, verbose_name='Public Key Algorithm OID')),
                ('spki_algorithm', models.CharField(editable=False, max_length=256, verbose_name='Public Key Algorithm')),
                ('spki_key_size', models.PositiveIntegerField(editable=False, verbose_name='Public Key Size')),
                ('spki_ec_curve_oid', models.CharField(choices=[('', 'None'), ('1.2.840.10045.3.1.1', 'Secp192R1'), ('1.3.132.0.33', 'Secp224R1'), ('1.3.132.0.10', 'Secp256K1'), ('1.2.840.10045.3.1.7', 'Secp256R1'), ('1.3.132.0.34', 'Secp384R1'), ('1.3.132.0.35', 'Secp521R1'), ('1.3.36.3.3.2.8.1.1.7', 'Brainpoolp256R1'), ('1.3.36.3.3.2.8.1.1.11', 'Brainpoolp384R1'), ('1.3.36.3.3.2.8.1.1.13', 'Brainpoolp512R1'), ('1.3.132.0.1', 'Sect163K1'), ('1.3.132.0.15', 'Sect163R2'), ('1.3.132.0.26', 'Sect233K1'), ('1.3.132.0.27', 'Sect233R1'), ('1.3.132.0.16', 'Sect283K1'), ('1.3.132.0.17', 'Sect283R1'), ('1.3.132.0.36', 'Sect409K1'), ('1.3.132.0.37', 'Sect409R1'), ('1.3.132.0.38', 'Sect571K1'), ('1.3.132.0.39', 'Sect571R1')], default='', editable=False, max_length=256, verbose_name='Public Key Curve OID (ECC)')),
                ('spki_ec_curve', models.CharField(default=None, editable=False, max_length=256, verbose_name='Public Key Curve (ECC)')),
                ('cert_pem', models.TextField(editable=False, verbose_name='Certificate (PEM)')),
                ('public_key_pem', models.CharField(editable=False, max_length=65536, verbose_name='Public Key (PEM, SPKI)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created-At')),
                ('authority_information_access_extension', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.authorityinformationaccessextension')),
                ('authority_key_identifier_extension', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.authoritykeyidentifierextension', verbose_name='Authority Key Identifier')),
                ('basic_constraints_extension', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.basicconstraintsextension', verbose_name='Basic Constraints')),
                ('issuer', models.ManyToManyField(editable=False, related_name='issuer', to='pki.attributetypeandvalue', verbose_name='Issuer')),
                ('subject', models.ManyToManyField(editable=False, related_name='subject', to='pki.attributetypeandvalue', verbose_name='Subject')),
                ('certificate_policies_extension', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.certificatepoliciesextension', verbose_name='Certificate Policies')),
                ('crl_distribution_points_extension', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.crldistributionpointsextension')),
                ('extended_key_usage_extension', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.extendedkeyusageextension', verbose_name='Extended Key Usage')),
            ],
            bases=(trustpoint.logger.LoggerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CertificateChainOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(editable=False)),
                ('certificate', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='pki.certificatemodel')),
                ('primary_certificate', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='primary_certificate_set', to='pki.certificatemodel')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CredentialModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential_type', models.IntegerField(choices=[(0, 'Trustpoint TLS Server'), (1, 'Root CA'), (2, 'Issuing CA'), (3, 'Issued Credential')], verbose_name='Credential Type')),
                ('private_key', models.CharField(blank=True, default='', max_length=65536, verbose_name='Private key (PEM)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credential_set', to='pki.certificatemodel')),
                ('certificate_chain', models.ManyToManyField(blank=True, related_name='credential_certificate_chains', through='pki.CertificateChainOrderModel', to='pki.certificatemodel')),
            ],
            options={
                'abstract': False,
            },
            bases=(trustpoint.logger.LoggerMixin, models.Model),
        ),
        migrations.AddField(
            model_name='certificatechainordermodel',
            name='credential',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='pki.credentialmodel'),
        ),
        migrations.CreateModel(
            name='ActiveTrustpointTlsServerCredentialModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pki.credentialmodel')),
            ],
        ),
        migrations.AddField(
            model_name='crldistributionpointsextension',
            name='distribution_points',
            field=models.ManyToManyField(blank=True, to='pki.distributionpointmodel', verbose_name='Distribution Points'),
        ),
        migrations.CreateModel(
            name='DistributionPointName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_relative_to_crl_issuer', models.ManyToManyField(blank=True, editable=False, related_name='distribution_point_name', to='pki.attributetypeandvalue', verbose_name='Name relative to crl issuer')),
            ],
            options={
                'abstract': False,
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='distributionpointmodel',
            name='distribution_point_name',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='pki.distributionpointname', verbose_name='Distribution Point Name'),
        ),
        migrations.CreateModel(
            name='FreshestCrlExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('distribution_points', models.ManyToManyField(blank=True, to='pki.distributionpointmodel')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='freshest_crl_extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.freshestcrlextension'),
        ),
        migrations.CreateModel(
            name='GeneralNameDirectoryName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', models.ManyToManyField(editable=False, to='pki.attributetypeandvalue', verbose_name='Name')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_type', models.CharField(choices=[('A4', 'IPv4 Address'), ('A6', 'IPv6 Address'), ('N4', 'IPv4 Network'), ('N6', 'IPv6 Network')], editable=False, max_length=2, verbose_name='IP Type')),
                ('value', models.CharField(editable=False, max_length=16384, verbose_name='Value')),
            ],
            options={
                'unique_together': {('ip_type', 'value')},
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GeneralNameModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directory_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamedirectoryname')),
                ('dns_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamednsname')),
                ('ip_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnameipaddress')),
            ],
            options={
                'abstract': False,
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='accessdescriptionmodel',
            name='access_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamemodel', verbose_name='Access Location'),
        ),
        migrations.CreateModel(
            name='GeneralNameOtherName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.CharField(editable=False, max_length=256, verbose_name='OID')),
                ('value', models.CharField(editable=False, max_length=16384, verbose_name='Value')),
            ],
            options={
                'unique_together': {('type_id', 'value')},
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='generalnamemodel',
            name='other_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnameothername'),
        ),
        migrations.AddField(
            model_name='generalnamemodel',
            name='registered_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnameregisteredid'),
        ),
        migrations.AddField(
            model_name='generalnamemodel',
            name='rfc822_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamerfc822name'),
        ),
        migrations.CreateModel(
            name='GeneralNamesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directory_names', models.ManyToManyField(related_name='general_names_set', to='pki.generalnamedirectoryname', verbose_name='Directory Names')),
                ('dns_names', models.ManyToManyField(related_name='general_names_set', to='pki.generalnamednsname', verbose_name='DNS Names')),
                ('ip_addresses', models.ManyToManyField(related_name='general_names_set', to='pki.generalnameipaddress', verbose_name='IP Addresses')),
                ('other_names', models.ManyToManyField(related_name='general_names_set', to='pki.generalnameothername', verbose_name='Other Names')),
                ('registered_ids', models.ManyToManyField(related_name='general_names_set', to='pki.generalnameregisteredid', verbose_name='Registered IDs')),
                ('rfc822_names', models.ManyToManyField(related_name='general_names_set', to='pki.generalnamerfc822name', verbose_name='RFC822 Names')),
                ('uniform_resource_identifiers', models.ManyToManyField(related_name='general_names_set', to='pki.generalnameuniformresourceidentifier', verbose_name='Uniform Resource Identifiers')),
            ],
            options={
                'abstract': False,
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='distributionpointname',
            name='full_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamesmodel'),
        ),
        migrations.AddField(
            model_name='distributionpointmodel',
            name='crl_issuer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamesmodel', verbose_name='CRL Issuer'),
        ),
        migrations.AddField(
            model_name='authoritykeyidentifierextension',
            name='authority_cert_issuer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamesmodel', verbose_name='Issuer Alternative Name Issuer'),
        ),
        migrations.AddField(
            model_name='generalnamemodel',
            name='uri',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnameuniformresourceidentifier'),
        ),
        migrations.CreateModel(
            name='GeneralSubtree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum', models.PositiveIntegerField(default=0, editable=False)),
                ('maximum', models.PositiveIntegerField(blank=True, default=None, editable=False, null=True)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamemodel')),
            ],
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='inhibit_any_policy_extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.inhibitanypolicyextension'),
        ),
        migrations.CreateModel(
            name='IssuerAlternativeNameExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('issuer_alt_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamesmodel', verbose_name='Issuer Alternative Name Issuer')),
            ],
            options={
                'abstract': False,
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='issuer_alternative_name_extension',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.issueralternativenameextension', verbose_name='Issuer Alternative Name'),
        ),
        migrations.CreateModel(
            name='IssuingCaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_name', models.CharField(max_length=100, unique=True, validators=[util.field.UniqueNameValidator()], verbose_name='Issuing CA Name')),
                ('issuing_ca_type', models.IntegerField(choices=[(0, 'Auto-Generated Root'), (1, 'Auto-Generated'), (2, 'Local-Unprotected'), (3, 'Local-PKCS11'), (4, 'Remote-EST'), (5, 'Remote-CMP')], verbose_name='Issuing CA Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('last_crl_issued_at', models.DateTimeField(blank=True, null=True, verbose_name='Last CRL Issued')),
                ('crl_pem', models.TextField(default='', editable=False, verbose_name='CRL in PEM format')),
                ('credential', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='issuing_cas', to='pki.credentialmodel')),
            ],
            options={
                'abstract': False,
            },
            bases=(trustpoint.logger.LoggerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DomainModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_name', models.CharField(max_length=100, unique=True, validators=[util.field.UniqueNameValidator()], verbose_name='Domain Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('auto_create_new_device', models.BooleanField(default=False, help_text='Automatically create a new device if no device with the same serial number exists in the database.', verbose_name='Auto-create new device')),
                ('allow_username_password_registration', models.BooleanField(default=True, help_text='New devices can be enrolled with a username and password.', verbose_name='Allow username:password Enrollment')),
                ('allow_idevid_registration', models.BooleanField(default=True, help_text='Allow registration of a new device using the IDevID of the Device.', verbose_name='Allow IDevID Enrollment')),
                ('domain_credential_auth', models.BooleanField(default=True, help_text='The EST server permits a domain credential issued by the domain Issuing CA for authentication.', verbose_name='Allow a Domain Credential for Authentication')),
                ('username_password_auth', models.BooleanField(default=False, help_text='The EST server permits username and password for authentication.', verbose_name='Allow username:password for Authentication')),
                ('allow_app_certs_without_domain', models.BooleanField(default=False, help_text='Allow issuance of application certificates without a domain credential.', verbose_name='Allow Application Certificates without Domain Credential')),
                ('issuing_ca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='domains', to='pki.issuingcamodel', verbose_name='Issuing CA')),
            ],
        ),
        migrations.AddField(
            model_name='extendedkeyusageextension',
            name='key_purpose_ids',
            field=models.ManyToManyField(editable=False, related_name='extended_key_usages', to='pki.keypurposeidmodel'),
        ),
        migrations.CreateModel(
            name='KeyUsageExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('digital_signature', models.BooleanField(default=False, editable=False, verbose_name='Digital Signature')),
                ('content_commitment', models.BooleanField(default=False, editable=False, verbose_name='Content Commitment')),
                ('key_encipherment', models.BooleanField(default=False, editable=False, verbose_name='Key Encipherment')),
                ('data_encipherment', models.BooleanField(default=False, editable=False, verbose_name='Data Encipherment')),
                ('key_agreement', models.BooleanField(default=False, editable=False, verbose_name='Key Agreement')),
                ('key_cert_sign', models.BooleanField(default=False, editable=False, verbose_name='Key Cert Sign')),
                ('crl_sign', models.BooleanField(default=False, editable=False, verbose_name='CRL Sign')),
                ('encipher_only', models.BooleanField(default=False, editable=False, verbose_name='Encipher Only')),
                ('decipher_only', models.BooleanField(default=False, editable=False, verbose_name='Decipher Only')),
            ],
            options={
                'unique_together': {('digital_signature', 'content_commitment', 'key_encipherment', 'data_encipherment', 'key_agreement', 'key_cert_sign', 'crl_sign', 'encipher_only', 'decipher_only')},
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='key_usage_extension',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.keyusageextension', verbose_name='Key Usage'),
        ),
        migrations.CreateModel(
            name='NameConstraintsExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('excluded_subtrees', models.ManyToManyField(editable=False, related_name='excluded_subtrees_set', to='pki.generalsubtree')),
                ('permitted_subtrees', models.ManyToManyField(editable=False, related_name='permitted_subtrees_set', to='pki.generalsubtree')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='name_constraints_extension',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.nameconstraintsextension'),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='policy_constraints_extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.policyconstraintsextension'),
        ),
        migrations.AddField(
            model_name='certificatepoliciesextension',
            name='certificate_policies',
            field=models.ManyToManyField(editable=False, related_name='certificate_policies', to='pki.policyinformation'),
        ),
        migrations.CreateModel(
            name='PolicyMappingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuer_domain_policy', models.CharField(editable=False, max_length=256, verbose_name='Issuer Domain Policy OID')),
                ('subject_domain_policy', models.CharField(editable=False, max_length=256, verbose_name='Subject Domain Policy OID')),
            ],
            options={
                'unique_together': {('issuer_domain_policy', 'subject_domain_policy')},
            },
        ),
        migrations.CreateModel(
            name='PolicyMappingsExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('policy_mappings', models.ManyToManyField(editable=False, related_name='policy_mappings_extension', to='pki.policymappingmodel')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='policyinformation',
            name='policy_qualifiers',
            field=models.ManyToManyField(blank=True, editable=False, related_name='policies', to='pki.policyqualifierinfo'),
        ),
        migrations.CreateModel(
            name='PrimaryCredentialCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False)),
                ('certificate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pki.certificatemodel')),
                ('credential', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pki.credentialmodel')),
            ],
        ),
        migrations.AddField(
            model_name='credentialmodel',
            name='certificates',
            field=models.ManyToManyField(related_name='credential', through='pki.PrimaryCredentialCertificate', to='pki.certificatemodel'),
        ),
        migrations.CreateModel(
            name='QualifierModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cps_uri', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qualifiers', to='pki.cpsurimodel')),
            ],
            options={
                'abstract': False,
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='policyqualifierinfo',
            name='qualifier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.qualifiermodel'),
        ),
        migrations.CreateModel(
            name='RevokedCertificateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revoked_at', models.DateTimeField(auto_now_add=True, verbose_name='Revocation Date')),
                ('revocation_reason', models.TextField(choices=[('unspecified', 'Unspecified'), ('keyCompromise', 'Key Compromise'), ('cACompromise', 'CA Compromise'), ('affiliationChanged', 'Affiliation Changed'), ('superseded', 'Superseded'), ('cessationOfOperation', 'Cessation of Operation'), ('certificateHold', 'Certificate Hold'), ('privilegeWithdrawn', 'Privilege Withdrawn'), ('aACompromise', 'AA Compromise'), ('removeFromCRL', 'Remove from CRL')], default='unspecified', verbose_name='Revocation Reason')),
                ('ca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_certificates', to='pki.issuingcamodel', verbose_name='Issuing CA')),
                ('certificate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='revoked_certificate', to='pki.certificatemodel', verbose_name='Certificate')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectAlternativeNameExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('subject_alt_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.generalnamesmodel', verbose_name='Subject Alternative Name Subject')),
            ],
            options={
                'abstract': False,
            },
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='subject_alternative_name_extension',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.subjectalternativenameextension', verbose_name='Subject Alternative Name'),
        ),
        migrations.CreateModel(
            name='SubjectDirectoryAttributesExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('subject_directory_attributes', models.ManyToManyField(blank=True, editable=False, to='pki.attributetypeandvalue', verbose_name='Subject Directory Attributes')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='subject_directory_attributes_extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.subjectdirectoryattributesextension'),
        ),
        migrations.CreateModel(
            name='SubjectInformationAccessExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical', models.BooleanField(editable=False, verbose_name='Critical')),
                ('subject_info_access_syntax', models.ManyToManyField(blank=True, related_name='subject_info_access_syntax', to='pki.accessdescriptionmodel')),
            ],
            bases=(pki.models.extension.CertificateExtension, models.Model),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='subject_information_access_extension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.subjectinformationaccessextension'),
        ),
        migrations.AddField(
            model_name='certificatemodel',
            name='subject_key_identifier_extension',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='pki.subjectkeyidentifierextension', verbose_name='Subject Key Identifier'),
        ),
        migrations.CreateModel(
            name='DevIdRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_name', models.CharField(max_length=100, unique=True, validators=[util.field.UniqueNameValidator()], verbose_name='Unique Name')),
                ('serial_number_pattern', models.CharField(help_text='A regex pattern to match valid serial numbers for this registration.', max_length=255, verbose_name='Serial Number Pattern')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devid_registrations', to='pki.domainmodel', verbose_name='Associated Domain')),
                ('truststore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devid_registrations', to='pki.truststoremodel', verbose_name='Associated Truststore')),
            ],
        ),
        migrations.CreateModel(
            name='TruststoreOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(editable=False, verbose_name='Trust Store Certificate Index (Order)')),
                ('certificate', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='trust_store_components', to='pki.certificatemodel')),
                ('trust_store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='pki.truststoremodel')),
            ],
        ),
        migrations.AddField(
            model_name='truststoremodel',
            name='certificates',
            field=models.ManyToManyField(through='pki.TruststoreOrderModel', to='pki.certificatemodel', verbose_name='Truststore certificates'),
        ),
        migrations.CreateModel(
            name='UserNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explicit_text', models.CharField(blank=True, editable=False, max_length=200, null=True, verbose_name='Explicit Text')),
                ('notice_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pki.noticereference')),
            ],
            options={
                'abstract': False,
            },
            bases=(util.db.OrphanDeletionMixin, models.Model),
        ),
        migrations.AddField(
            model_name='qualifiermodel',
            name='user_notice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qualifiers', to='pki.usernotice'),
        ),
        migrations.AddConstraint(
            model_name='certificatechainordermodel',
            constraint=models.UniqueConstraint(fields=('credential', 'primary_certificate', 'order'), name='unique_group_order'),
        ),
        migrations.AlterUniqueTogether(
            name='truststoreordermodel',
            unique_together={('order', 'trust_store')},
        ),
    ]
