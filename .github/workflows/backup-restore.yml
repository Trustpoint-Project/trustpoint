# .github/workflows/backup-restore.yml
name: Backup & Restore TrustPoint

on:
  workflow_call:

jobs:
  backup-and-restore:
    runs-on: ubuntu-latest

    steps:
      - name: Install gettext tools
        run: sudo apt-get update && sudo apt-get install -y gettext
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and start PostgreSQL
        run: |
          docker build -t trustpointproject/postgres:latest -f docker/db/Dockerfile .
          docker run -d --name postgres -p 5432:5432 -e POSTGRES_USER=admin -e POSTGRES_PASSWORD=testing321 -e_POSTGRES_DB=trustpoint_db trustpointproject/postgres:latest

      - name: Set up uv environment
        uses: ./.github/actions/setup-uv-action

      - name: Initialize database schema
        run: |
          uv run trustpoint/manage.py inittrustpoint

      - name: Populate test data
        run: |
          uv run trustpoint/manage.py add_domains_and_devices
          uv run trustpoint/manage.py tls_cred

      - name: Build and start TrustPoint container
        run: |
          docker build -t trustpointproject/trustpoint:latest -f docker/trustpoint/Dockerfile .
          docker run -d --name trustpoint --link postgres -p 80:80 -p 443:443 -e POSTGRES_DB=trustpoint_db -e_DATABASE_USER=admin -e_DATABASE_PASSWORD=testing321 -e_DATABASE_HOST=postgres -e_DATABASE_PORT=5432 trustpointproject/trustpoint:latest

      - name: Validate initial deployment
        run: ./tests/scripts/test_successful_restoration.sh

      - name: Create backup in container
        run: |
          docker exec trustpoint sh -c "uv run trustpoint/manage.py trustpointbackup --filename from_outside"

      - name: Download backup artifact
        run: |
          docker cp trustpoint:/var/www/html/trustpoint/trustpoint/media/backups/from_outside.dump.gz .

      - name: Remove TrustPoint container
        run: docker rm -f trustpoint

      - name: Reset database
        run: |
          uv run trustpoint/manage.py reset_db --force --no-user

      - name: Start fresh TrustPoint container
        run: |
          docker run -d --name trustpoint --link postgres -p 80:80 -p 443:443 -e POSTGRES_DB=trustpoint_db -e_DATABASE_USER=admin -e_DATABASE_PASSWORD=testing321 -e_DATABASE_HOST=postgres -e_DATABASE_PORT=5432 trustpointproject/trustpoint:latest

      - name: Upload backup to container
        run: |
          docker cp from_outside.dump.gz trustpoint:/var/www/html/trustpoint/trustpoint/media/backups/

      - name: Restore database in container
        run: |
          docker exec trustpoint sh -c "uv run trustpoint/manage.py dbrestore -z --noinput -I trustpoint/media/backups/from_outside.dump.gz"

      - name: Restore TrustPoint in container
        run: |
          docker exec trustpoint sh -c "uv run trustpoint/manage.py trustpointrestore"

      - name: Validate post-restore deployment
        run: ./tests/scripts/test_successful_restoration.sh
